apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: openwebui
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: openwebui
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: open-webui
    repoURL: https://helm.openwebui.com/
    targetRevision: 5.10.1
    helm:
      valuesObject:
        ollama:
          enabled: false
        websocket:
          enabled: true
        pipelines:
          enabled: false
        ingress:
          enabled: false
        persistence:
          storageClass: ceph-filesystem
        extraResources:
          - apiVersion: external-secrets.io/v1beta1
            kind: ExternalSecret
            metadata:
              name: "openai-secret"
              namespace: openwebui
            spec:
              secretStoreRef:
                name: default-secret-store
                kind: ClusterSecretStore  # or ClusterSecretStore

              refreshInterval: "10s"

              target:
                name: openai-secret
                creationPolicy: 'Owner'
                deletionPolicy: "Retain"
                template:
                  type: Opaque
                  data:
                    openai: '{{ .openai }}'
              data:
                - secretKey: openai
                  remoteRef:
                    key: golden-secret
                    conversionStrategy: Default
                    decodingStrategy: None
                    metadataPolicy: None
                    property: openai-api-key
          - apiVersion: cert-manager.io/v1
            kind: Certificate
            metadata:
              name: openwebui
              namespace: openwebui
            spec:
              secretName: openwebui-tls        # <===  Name of secret where the generated certificate will be stored.
              dnsNames:
                - "openwebui.kirillorlov.pro"
              issuerRef:
                name: acme-issuer
                kind: ClusterIssuer
          - apiVersion: traefik.io/v1alpha1
            kind: IngressRoute
            metadata:
              name: openwebui-ingress
              namespace: openwebui
              annotations:
                external-dns.alpha.kubernetes.io/hostname: openwebui.kirillorlov.pro
                external-dns.alpha.kubernetes.io/target: kirillorlov.pro
                kubernetes.io/ingress.class: traefik
                gethomepage.dev/enabled: "true"
                gethomepage.dev/href: "https://openwebui.kirillorlov.pro"
                gethomepage.dev/group: Apps
                gethomepage.dev/name: openwebui
                gethomepage.dev/icon: "https://openwebui.com/favicon.png"
                gethomepage.dev/pod-selector: "app.kubernetes.io/instance=openwebui"
            spec:
              routes:
                - match: "Host(`openwebui.kirillorlov.pro`) && PathPrefix(`/oauth2`)"
                  kind: Rule
                  services:
                    - name: oauth2-proxy
                      namespace: oauth2-proxy
                      port: 80
                  middlewares:
                    - name: oauth-errors
                      namespace: oauth2-proxy
                - match: Host(`openwebui.kirillorlov.pro`)
                  kind: Rule
                  middlewares:
                    - name: oauth-errors
                      namespace: oauth2-proxy
                    - name: oauth2-proxy
                      namespace: oauth2-proxy
                  services:
                    - name: open-webui
                      port: http
              tls:
                secretName: openwebui-tls

        extraEnvVars:
          - name: OPENAI_API_KEY
            valueFrom:
              secretKeyRef:
                name: openai-secret
                key: openai
          - name: ENABLE_LOGIN_FORM
            value: "false"
          - name: ENABLE_OAUTH_SIGNUP
            value: "true"
          - name: ENABLE_COMMUNITY_SHARING
            value: "false"
          - name: ENABLE_MESSAGE_RATING
            value: "false"
          - name: OAUTH_MERGE_ACCOUNTS_BY_EMAIL
            value: "true"
          - name: DEFAULT_USER_ROLE
            value: "user"
          - name: WEBUI_AUTH
            value: "false"
          - name: WEBUI_AUTH_TRUSTED_NAME_HEADER
            value: "X-Auth-Request-User"
          - name: WEBUI_AUTH_TRUSTED_EMAIL_HEADER
            value: "X-Auth-Request-Email"

  syncPolicy:
    automated:
      prune: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - RespectIgnoreDifferences=true
