apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: prometheus
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: loki
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 6.24.1
    helm:
      valuesObject:
        loki:
          auth_enabled: false
          limits_config:
            reject_old_samples: false
          commonConfig:
            replication_factor: 1
          schemaConfig:
            configs:
              - from: 2024-04-01
                store: tsdb
                object_store: s3
                schema: v13
                index:
                  prefix: loki_index_
                  period: 24h
          tracing:
            enabled: true
          storage:
            bucketNames:
              chunks: "${LOKI_BUCKET_BUCKETNAME}"
              ruler: "${LOKI_BUCKET_BUCKETNAME}"
              admin: "${LOKI_BUCKET_BUCKETNAME}"
            s3:
              endpoint: "${LOKI_BUCKET_ENDPOINT}"
              accessKeyId: "${LOKI_BUCKET_ACCESSKEYID}"
              secretAccessKey: "${LOKI_BUCKET_SECRETACCESSKEY}"
              s3ForcePathStyle: true
              insecure: true

        gateway:
          enabled: false

        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "acme-issuer"
          enabled: true
          hosts:
            - loki.kirillorlov.pro
          tls:
            - secretName: alloy-tls
              hosts:
                - alloy.kirillorlov.pro
        deploymentMode: SingleBinary

        test:
          enabled: false
        lokiCanary:
          enabled: false
        minio:
          enabled: false
        chunksCache:
          enabled: false
        resultsCache:
          enabled: false

        singleBinary:
          extraArgs:
            - '-config.expand-env=true'
          extraEnv:
            - name: LOKI_BUCKET_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: loki-bucket-admin
                  key: BUCKET_HOST
            - name: LOKI_BUCKET_BUCKETNAME
              valueFrom:
                configMapKeyRef:
                  name: loki-bucket-admin
                  key: BUCKET_NAME
            - name: LOKI_BUCKET_ACCESSKEYID
              valueFrom:
                secretKeyRef:
                  name: loki-bucket-admin
                  key: AWS_ACCESS_KEY_ID
            - name: LOKI_BUCKET_SECRETACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: loki-bucket-admin
                  key: AWS_SECRET_ACCESS_KEY
          replicas: 3
        read:
          replicas: 0
        backend:
          replicas: 0
        write:
          replicas: 0

        extraObjects:
          - apiVersion: objectbucket.io/v1alpha1
            kind: ObjectBucketClaim
            metadata:
              name: loki-bucket-admin
            spec:
              bucketName: loki-bucket-admin
              generateBucketName: loki-bucket-admin
              storageClassName: ceph-bucket
              additionalConfig:
                bucketMaxObjects: "3000"
                bucketMaxSize: "20G"

  syncPolicy:
    automated:
      prune: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - RespectIgnoreDifferences=true
