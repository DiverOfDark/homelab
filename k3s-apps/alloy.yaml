apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: alloy
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: prometheus
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: alloy
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 0.9.2
    helm:
      valuesObject:
        alloy:
          configMap:
            content: |-
              // Write your Alloy config here:
              logging {
                level = "info"
                format = "logfmt"
              }
              
              // discovery.kubernetes allows you to find scrape targets from Kubernetes resources.
              // It watches cluster state and ensures targets are continually synced with what is currently running in your cluster.
              discovery.kubernetes "pod" {
                role = "pod"
              }
              
              // discovery.relabel rewrites the label set of the input targets by applying one or more relabeling rules.
              // If no rules are defined, then the input targets are exported as-is.
              discovery.relabel "pod_logs" {
                targets = discovery.kubernetes.pod.targets
              
                // Label creation - "namespace" field from "__meta_kubernetes_namespace"
                rule {
                  source_labels = ["__meta_kubernetes_namespace"]
                  action = "replace"
                  target_label = "namespace"
                }
              
                // Label creation - "pod" field from "__meta_kubernetes_pod_name"
                rule {
                  source_labels = ["__meta_kubernetes_pod_name"]
                  action = "replace"
                  target_label = "pod"
                }
              
                // Label creation - "container" field from "__meta_kubernetes_pod_container_name"
                rule {
                  source_labels = ["__meta_kubernetes_pod_container_name"]
                  action = "replace"
                  target_label = "container"
                }
              }
              
              // loki.source.kubernetes tails logs from Kubernetes containers using the Kubernetes API.
              loki.source.kubernetes "pod_logs" {
                targets    = discovery.relabel.pod_logs.output
                forward_to = [loki.write.local_loki.receiver]
              }
              
              loki.source.kubernetes_events "cluster_events" {
                job_name   = "integrations/kubernetes/eventhandler"
                log_format = "logfmt"
                forward_to = [
                  loki.process.cluster_events.receiver,
                ]
              }
              
              // loki.process receives log entries from other loki components, applies one or more processing stages,
              // and forwards the results to the list of receivers in the componentâ€™s arguments.
              loki.process "cluster_events" {
                forward_to = [loki.write.local_loki.receiver]
              
                stage.static_labels {
                  values = {
                    cluster = "homelab",
                  }
                }
              
                stage.labels {
                  values = {
                    kubernetes_cluster_events = "job",
                  }
                }
              }
              
              loki.write "local_loki" {
                  endpoint {
                      tenant_id = "homelab"
                      url = "http://loki:3100/loki/api/v1/push"
                  }
              }
          mounts:
            varlog: true
            dockercontainers: true
        serviceMonitor:
          enabled: true
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "acme-issuer"
          enabled: true
          hosts:
            - alloy.kirillorlov.pro
          tls:
            - secretName: alloy-tls
              hosts:
                - alloy.kirillorlov.pro
  syncPolicy:
    automated:
      prune: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - RespectIgnoreDifferences=true
