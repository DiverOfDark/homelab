apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana-operator
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: prometheus
    server: https://kubernetes.default.svc
  project: default
  ignoreDifferences:
    - group: '*'
      jqPathExpressions:
        - .data."admin-user"
        - .data."admin-password"
      kind: Secret
    - group: '*'
      jqPathExpressions:
        - .metadata.annotations."gethomepage.dev/widget.password"
      kind: Ingress
  source:
    repoURL: ghcr.io/grafana/helm-charts
    targetRevision: v5.17.1
    chart: grafana-operator
    helm:
      valuesObject:
        serviceMonitor:
          enabled: true
        dashboard:
          enabled: true
        extraObjects:
          - apiVersion: external-secrets.io/v1beta1
            kind: ExternalSecret
            metadata:
              name: "oauth-secret"
            spec:
              secretStoreRef:
                name: bitwarden-login
                kind: ClusterSecretStore  # or ClusterSecretStore
              refreshInterval: "10s"
              target:
                name: oauth-secret
                creationPolicy: 'Owner'
                deletionPolicy: "Retain"
                template:
                  type: Opaque
                  data:
                    oauth-secret: "{{`{{ .userPassword }}`}}"
              data:
                - secretKey: userPassword
                  remoteRef:
                    key: 0e313ad2-4820-4e9b-b86f-5d4816dbb1e0
                    conversionStrategy: Default
                    decodingStrategy: None
                    metadataPolicy: None
                    property: password
          - apiVersion: grafana.integreatly.org/v1beta1
            kind: Grafana
            metadata:
              name: grafana
              labels:
                dashboards: "grafana"
            spec:
              persistentVolumeClaim:
                spec:
                  accessModes:
                    - ReadWriteOnce
                  resources:
                    requests:
                      storage: 1Gi
                  storageClassName: ceph-block
              deployment:
                spec:
                  revisionHistoryLimit: 1
                  template:
                    spec:
                      containers:
                        - name: grafana
                          env:
                            - name: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
                              valueFrom:
                                secretKeyRef:
                                  name: oauth-secret
                                  key: oauth-secret
                          securityContext:
                            runAsNonRoot: false
                            runAsUser: 0
                          readinessProbe:
                            failureThreshold: 3
                      volumes:
                        - name: grafana-data
                          persistentVolumeClaim:
                            claimName: grafana-pvc
                  strategy:
                    type: Recreate
              config:
                server:
                  domain: "grafana.kirillorlov.pro"
                  root_url: "https://grafana.kirillorlov.pro"
                auth:
                  disable_gravatar: "true"
                  disable_login_form: "true"
                  disable_signout_menu: "false"
                  disable_user_sign_up: "false"
                  login_hint: "https://dex.kirillorlov.pro/dex/auth?client_id=grafana&response_type=code&scope=openid+email+profile+offline_access+roles&redirect_uri=https://grafana.kirillorlov.pro/login/generic_oauth"
                log:
                  mode: "console"
                auth.generic_oauth:
                  # For variables see https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/#env-provider
                  enabled: "true"
                  name: "HomeLab"
                  allow_sign_up: "true"
                  client_id: "grafana"
                  scopes: "openid email profile offline_access"
                  email_attribute_path: "email"
                  login_attribute_path: "username"
                  name_attribute_path: "full_name"
                  groups_attribute_path: "groups"
                  auth_url: "https://dex.kirillorlov.pro/auth"
                  token_url: "https://dex.kirillorlov.pro/token"
                  api_url: "https://dex.kirillorlov.pro/userinfo"
                  role_attribute_path: "'Admin'"
                  skip_org_role_sync: "true"
              ingress:
                metadata:
                  annotations:
                    cert-manager.io/cluster-issuer: "acme-issuer"
                    gethomepage.dev/enabled: "true"
                    gethomepage.dev/href: "https://grafana.kirillorlov.pro"
                    gethomepage.dev/group: Cluster Management
                    gethomepage.dev/name: Grafana
                    gethomepage.dev/icon: grafana.png
                    gethomepage.dev/pod-selector: "app=grafana"
                    gethomepage.dev/widget.type: grafana
                    gethomepage.dev/widget.url: https://grafana.kirillorlov.pro/
                    gethomepage.dev/widget.username: diverofdark
                    gethomepage.dev/widget.password: "$admin-password$"
                    kirillorlov.pro/annotationsFromSecretName: prometheus-grafana
                spec:
                  ingressClassName: traefik
                  rules:
                    - host: grafana.kirillorlov.pro
                      http:
                        paths:
                          - backend:
                              service:
                                name: grafana-service
                                port:
                                  number: 3000
                            path: /
                            pathType: Prefix
                  tls:
                    - hosts:
                        - grafana.kirillorlov.pro
                      secretName: grafana-tls-secret
          - apiVersion: grafana.integreatly.org/v1beta1
            kind: GrafanaDatasource
            metadata:
              name: prometheus-grafanadatasource
            spec:
              datasource:
                access: "proxy"
                type: prometheus
                name: Prometheus
                isDefault: "true"
                url: http://prometheus-kube-prometheus-prometheus.prometheus.svc.cluster.local:9090
              instanceSelector:
                matchLabels:
                  dashboards: grafana
          - apiVersion: grafana.integreatly.org/v1beta1
            kind: GrafanaDatasource
            metadata:
              name: victorialogs-grafanadatasource
            spec:
              datasource:
                access: "proxy"
                type: victoriametrics-logs-datasource
                name: Victoria Logs
                url: http://victorialogs-victoria-logs-single-server.victorialogs.svc.cluster.local:9428
              instanceSelector:
                matchLabels:
                  dashboards: grafana
              plugins:
                - name: victoriametrics-logs-datasource
                  version: 0.16.3
  syncPolicy:
    managedNamespaceMetadata:
      labels:
        pod-security.kubernetes.io/enforce: privileged
    automated:
      prune: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - RespectIgnoreDifferences=true
