apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: velero
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://vmware-tanzu.github.io/helm-charts
    chart: velero
    targetRevision: 10.0.1
    helm:
      valuesObject:
        extraObjects:
          - apiVersion: v1
            kind: ConfigMap
            metadata:
              name: resource-policy-configmap
              namespace: velero
            data:
              resource-policy.yaml: |
                # currently only supports v1 version
                version: v1
                volumePolicies:
                - conditions:
                    pvcLabels:
                      velero.io/exclude-from-backup: "true"
                  action:
                    type: skip
                - conditions:
                    # nfs could be empty which matches any nfs volume source
                    nfs: {}
                  action:
                    type: skip
                - conditions:
                    volumeTypes:
                      - emptyDir
                      - downwardAPI
                      - configmap
                      - cinder
                  action:
                    type: skip

          - apiVersion: external-secrets.io/v1
            kind: ExternalSecret
            metadata:
              name: "velero-repo-secret"
              namespace: velero
            spec:
              secretStoreRef:
                name: bitwarden-fields
                kind: ClusterSecretStore  # or ClusterSecretStore
              refreshInterval: "10s"
              target:
                name: velero-repo-credentials
                creationPolicy: 'Owner'
                deletionPolicy: "Retain"
                template:
                  type: Opaque
                  data:
                    repository-password: "{{`{{ .encryption }}`}}"
              data:
                - secretKey: encryption
                  remoteRef:
                    key: 583655f6-ce75-43e1-8326-85860d136809
                    conversionStrategy: Default
                    decodingStrategy: None
                    metadataPolicy: None
                    property: encryption
          - apiVersion: external-secrets.io/v1
            kind: ExternalSecret
            metadata:
              name: "velero-secret"
              namespace: velero
            spec:
              secretStoreRef:
                name: bitwarden-fields
                kind: ClusterSecretStore  # or ClusterSecretStore
              refreshInterval: "10s"
              target:
                name: velero-credentials
                creationPolicy: 'Owner'
                deletionPolicy: "Retain"
                template:
                  type: Opaque
                  data:
                    cloud: |
                      [default]
                      aws_access_key_id="{{`{{ .archer_s3_access_key }}`}}"
                      aws_secret_access_key="{{`{{ .archer_s3_secret_key }}`}}"
                    SECURITY_TOKEN_KEY: "{{`{{ .velero_ui_security_token_key }}`}}"
                    AWS_ACCESS_KEY_ID: "{{`{{ .archer_s3_access_key }}`}}"
                    AWS_SECRET_ACCESS_KEY: "{{`{{ .archer_s3_secret_key }}`}}"
                    RESTIC_PASSWORD: "{{`{{ .encryption }}`}}"
                    OAUTH_KEY: "{{`{{ .password }}`}}"
                    SECURITY_PATH_DATABASE: "./data"
                    DEFAULT_ADMIN_USERNAME: "admin"
                    DEFAULT_ADMIN_PASSWORD: "admin"
              data:
                - secretKey: password
                  remoteRef:
                    key: 583655f6-ce75-43e1-8326-85860d136809
                    conversionStrategy: Default
                    decodingStrategy: None
                    metadataPolicy: None
                    property: oauth
                - secretKey: archer_s3_access_key
                  remoteRef:
                    key: 583655f6-ce75-43e1-8326-85860d136809
                    conversionStrategy: Default
                    decodingStrategy: None
                    metadataPolicy: None
                    property: access
                - secretKey: archer_s3_secret_key
                  remoteRef:
                    key: 583655f6-ce75-43e1-8326-85860d136809
                    conversionStrategy: Default
                    decodingStrategy: None
                    metadataPolicy: None
                    property: secret
                - secretKey: velero_ui_security_token_key
                  remoteRef:
                    key: 583655f6-ce75-43e1-8326-85860d136809
                    conversionStrategy: Default
                    decodingStrategy: None
                    metadataPolicy: None
                    property: security-token
                - secretKey: encryption
                  remoteRef:
                    key: 583655f6-ce75-43e1-8326-85860d136809
                    conversionStrategy: Default
                    decodingStrategy: None
                    metadataPolicy: None
                    property: encryption
          - apiVersion: monitoring.coreos.com/v1alpha1
            kind: ScrapeConfig
            metadata:
              name: minio-monitoring-cluster
              namespace: velero
            spec:
              metricsPath: /minio/v2/metrics/cluster
              staticConfigs:
                - labels:
                    job: prometheus
                  targets:
                    - yggdrasil.kirillorlov.pro:80
          - apiVersion: grafana.integreatly.org/v1beta1
            kind: GrafanaDashboard
            metadata:
              name: minio-monitoring
              namespace: velero
            spec:
              allowCrossNamespaceImport: true
              instanceSelector:
                matchLabels:
                  dashboards: "grafana"
              grafanaCom:
                id: 13502
              datasources:
                - inputName: DS_PROMETHEUS
                  datasourceName: Prometheus
          - apiVersion: monitoring.coreos.com/v1alpha1
            kind: ScrapeConfig
            metadata:
              name: minio-monitoring-bucket
              namespace: velero
            spec:
              metricsPath: /minio/v2/metrics/bucket
              staticConfigs:
                - labels:
                    job: prometheus
                  targets:
                    - yggdrasil.kirillorlov.pro:80
          - apiVersion: monitoring.coreos.com/v1alpha1
            kind: ScrapeConfig
            metadata:
              name: minio-monitoring-node
              namespace: velero
            spec:
              metricsPath: /minio/v2/metrics/node
              staticConfigs:
                - labels:
                    job: prometheus
                  targets:
                    - yggdrasil.kirillorlov.pro:80
          - apiVersion: monitoring.coreos.com/v1alpha1
            kind: ScrapeConfig
            metadata:
              name: minio-monitoring-resource
              namespace: velero
            spec:
              metricsPath: /minio/v2/metrics/resource
              staticConfigs:
                - labels:
                    job: prometheus
                  targets:
                    - yggdrasil.kirillorlov.pro:80
        credentials:
          useSecret: true
          existingSecret: velero-credentials

        configuration:
          itemBlockWorkerCount: 2
          backupStorageLocation:
          - name: default
            provider: aws
            bucket: ceph-backups
            config:
              region: default
              s3ForcePathStyle: true
              s3Url: https://yggdrasil.kirillorlov.pro/
          volumeSnapshotLocation:
          - name: default
            provider: aws
            bucket: ceph-backups
            config:
              region: default
              s3ForcePathStyle: true
              s3Url: https://yggdrasil.kirillorlov.pro/
          features: EnableCSI
        deployNodeAgent: true
        initContainers:
          - name: velero-plugin-for-aws
            image: velero/velero-plugin-for-aws:v1.12.1
            imagePullPolicy: IfNotPresent
            volumeMounts:
              - mountPath: /target
                name: plugins
        schedules:
          talos:
            disabled: false
            schedule: "0 0 * * *" ## choose time, when scheduled backups will be make.
            template:
              ttl: "240h" ## choose ttl, after which the backups will be removed.
              snapshotVolumes: true
              defaultVolumesToFsBackup: true
              resourcePolicy:
                kind: configmap
                name: resource-policy-configmap
              uploaderConfig:
                parallelFilesUpload: 10
              metadata:
                labels: # reset labels to not show backups in ArgoCD
                  app.kubernetes.io/instance: ""
                  app.kubernetes.io/managed-by: ""
                  app.kubernetes.io/name: ""
                  argocd.argoproj.io/instance: ""
  destination:
    server: https://kubernetes.default.svc
    namespace: velero
  syncPolicy:
    managedNamespaceMetadata:
      labels:
        reloader.stakater.com/auto: "true"
    automated:
      prune: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
      - RespectIgnoreDifferences=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: veleroui
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://helm.otwld.com/
    chart: velero-ui
    targetRevision: 0.12.1
    helm:
      valuesObject:
        configuration:
          general:
            grafanaUrl: https://grafana.kirillorlov.pro/
            secretPassPhrase:
              existingSecret: velero-credentials
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: acme-issuer
          enabled: true
          ingressClassName: traefik
          hosts:
            - host: velero.kirillorlov.pro
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - hosts:
                - velero.kirillorlov.pro
              secretName: velero-tls
        env:
          - name: OAUTH_AUTH_ENABLED
            value: "true"
          - name: OAUTH_NAME
            value: "Homelab"
          - name: OAUTH_AUTHORIZATION_URL
            value: "https://dex.kirillorlov.pro/auth"
          - name: OAUTH_USER_INFO_URL
            value: "https://dex.kirillorlov.pro/userinfo"
          - name: OAUTH_TOKEN_URL
            value: "https://dex.kirillorlov.pro/token"
          - name: OAUTH_CLIENT_ID
            value: "velero"
          - name: OAUTH_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: velero-credentials
                key: OAUTH_KEY
          - name: OAUTH_OAUTH_SCOPE
            value: "openid email groups profile offline_access"
          - name: OAUTH_REDIRECT_URI
            value: "https://velero.kirillorlov.pro/login"

  destination:
    server: https://kubernetes.default.svc
    namespace: velero
  syncPolicy:
    managedNamespaceMetadata:
      labels:
        pod-security.kubernetes.io/enforce: privileged
    automated:
      prune: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
      - RespectIgnoreDifferences=true
---