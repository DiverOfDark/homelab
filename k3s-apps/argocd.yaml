apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: "oauth-secret"
  namespace: argocd
spec:
  secretStoreRef:
    name: bitwarden-login
    kind: ClusterSecretStore  # or ClusterSecretStore

  refreshInterval: "10s"

  target:
    name: oauth-secret
    creationPolicy: 'Owner'
    deletionPolicy: "Retain"
    template:
      type: Opaque
      data:
        password: "{{ .userPassword }}"
  data:
    - secretKey: userPassword
      remoteRef:
        key: 0e313ad2-4820-4e9b-b86f-5d4816dbb1e0
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        property: password
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
  namespace: argocd
  finalizers:
      - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  ignoreDifferences:
    - group: '*'
      jqPathExpressions:
        - .metadata.annotations."gethomepage.dev/widget.key"
      kind: Ingress
  sources:
    - chart: argo-helm/argo-cd
      repoURL: ghcr.io/argoproj
      targetRevision: 8.0.1
      helm:
        valuesObject:
            global:
              domain: argo.kirillorlov.pro
              affinity.nodeAffinity.type: soft
        
            server:
              replicas: 2
              ingress:
                enabled: true
                tls: true
                ingressClassName: traefik
                annotations:
                  cert-manager.io/cluster-issuer: acme-issuer
                  gethomepage.dev/enabled: "true"
                  gethomepage.dev/href: "https://argo.kirillorlov.pro"
                  gethomepage.dev/group: Cluster Management
                  gethomepage.dev/name: ArgoCD
                  gethomepage.dev/icon: "https://raw.githubusercontent.com/homarr-labs/dashboard-icons/refs/heads/main/png/argo-cd.png"
                  gethomepage.dev/pod-selector: "app.kubernetes.io/instance=argocd"
                  gethomepage.dev/widget.type: argocd
                  gethomepage.dev/widget.url: http://argocd-server.argocd.svc.cluster.local
                  gethomepage.dev/widget.key: "$token$"
                  kirillorlov.pro/annotationsFromSecretName: argocd-readonly-token


              autoscaling:
                enabled: false
                minReplicas: 2
              certificate:
                enabled: false
                issuer:
                  group: cert-manager.io
                  kind: ClusterIssuer
                  name: acme-issuer
              metrics:
                enabled: "true"
                serviceMonitor:
                  enabled: "true"
        
            redis-ha:
              enabled: false
              haproxy:
                hardAntiAffinity: false
        
        
            configs:
              params:
                server.insecure: true
              rbac:
                policy.csv: "g, readonly, role:readonly"
              cm:
                oidc.config: |
                  name: Homelab
                  issuer: https://dex.kirillorlov.pro
                  clientId: argocd
                  clientSecret: $oauth-secret:password
                  requestedScopes: ["openid", "profile", "email", "groups"]

                exec.enabled: true
                accounts.readonly: apiKey
                resource.customizations.ignoreDifferences.PersistentVolumeClaim: |
                  jqPathExpressions:
                    - '.spec.volumeName'
                    - '.metadata.finalizers'
                    - '.metadata.annotations'
                resource.customizations.ignoreDifferences.admissionregistration.k8s.io_MutatingWebhookConfiguration: |
                  jqPathExpressions:
                    - '.webhooks[]?.clientConfig.caBundle'
            dex:
              enabled: false
        
            controller:
              replicas: 2
              metrics:
                enabled: "true"
                serviceMonitor:
                  enabled: "true"
        
            repoServer:
              autoscaling:
                enabled: false
                minReplicas: 2
              metrics:
                enabled: "true"
                serviceMonitor:
                  enabled: "true"
        
            applicationSet:
              replicas: 2
              metrics:
                enabled: "true"
                serviceMonitor:
                  enabled: "true"
          
            
            notifications:
              metrics:
                enabled: "true"
                serviceMonitor:
                  enabled: "true"
          
            redis:
              exporter:
                enabled: "true"
            
              metrics:
                enabled: "true"
                serviceMonitor:
                  enabled: "true"

  destination:
    server: https://kubernetes.default.svc
    namespace: argocd
  syncPolicy:
    automated:
      prune: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - RespectIgnoreDifferences=true
