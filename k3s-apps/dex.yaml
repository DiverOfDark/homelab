apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: "google-secret"
  namespace: oauth2-proxy
spec:
  secretStoreRef:
    name: bitwarden-login
    kind: ClusterSecretStore  # or ClusterSecretStore

  refreshInterval: "10s"

  target:
    name: google-secret
    creationPolicy: 'Owner'
    deletionPolicy: "Retain"
    template:
      type: Opaque
      data:
        client-id: "{{ .clientId }}"
        client-secret: "{{ .clientSecret }}"
        user-password: "{{ .userPassword }}"
  data:
    - secretKey: clientId
      remoteRef:
        key: e1699b85-e225-434f-b38d-4a4015341808
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        property: username
    - secretKey: clientSecret
      remoteRef:
        key: e1699b85-e225-434f-b38d-4a4015341808
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        property: password
    - secretKey: userPassword
      remoteRef:
        key: 0e313ad2-4820-4e9b-b86f-5d4816dbb1e0
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        property: password
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: dex
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: oauth2-proxy
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: dex
    repoURL: https://charts.dexidp.io
    targetRevision: 0.23.0
    helm:
      valuesObject:
        envVars:
          - name: GOOGLE_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: google-secret
                key: client-id
          - name: GOOGLE_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: google-secret
                key: client-secret
          - name: OAUTH_SECRET
            valueFrom:
              secretKeyRef:
                name: google-secret
                key: user-password
        config:
          logger:
            level: "Debug"
          oauth2:
            skipApprovalScreen: true
          connectors:
            - type: google
              id: google
              name: Google
              config:

                # Connector config values starting with a "$" will read from the environment.
                clientID: "$GOOGLE_CLIENT_ID"
                clientSecret: "$GOOGLE_CLIENT_SECRET"

                # Dex's issuer URL + "/callback"
                redirectURI: "https://dex.kirillorlov.pro/callback"
                promptType: ""
          staticClients:
            #- id: actualmoney
            #  name: ActualBudget
            #  redirectURIs:
            #    - https://money.kirillorlov.pro/openid/callback
            #  secretEnv: "OAUTH_SECRET"
            #  #secret: '{{`{{ .Env.OAUTH_SECRET }}`}}'  ## alternative option
            #  public: true
            - id: librechat
              name: LibreChat
              redirectURIs:
                  - https://ai-old.kirillorlov.pro/oauth/openid/callback
              secretEnv: "OAUTH_SECRET"
            - id: grafana
              name: Grafana
              redirectURIs:
                - https://grafana.kirillorlov.pro/login/generic_oauth
              secretEnv: "OAUTH_SECRET"
            - id: velero
              name: Velero
              redirectURIs:
                - https://velero.kirillorlov.pro/login
              secretEnv: "OAUTH_SECRET"
            - id: argocd
              name: ArgoCD
              redirectURIs:
                - https://argo.kirillorlov.pro/auth/callback
              secretEnv: "OAUTH_SECRET"
            - id: harbor
              name: Harbor
              redirectURIs:
                - https://harbor.kirillorlov.pro/c/oidc/callback
              secretEnv: "OAUTH_SECRET"
          issuer: https://dex.kirillorlov.pro
          storage:
            type: kubernetes
            config:
              inCluster: true
        ingress:
          enabled: true
          className: traefik
          hosts:
            - host: dex.kirillorlov.pro
              paths:
                - path: /
                  pathType: Prefix
          annotations:
            cert-manager.io/cluster-issuer: "acme-issuer"
            gethomepage.dev/enabled: "true"
            gethomepage.dev/href: "https://dex.kirillorlov.pro"
            gethomepage.dev/group: Cluster Management
            gethomepage.dev/name: DEX
            gethomepage.dev/icon: https://dexidp.io/favicons/favicon.png
            gethomepage.dev/pod-selector: "app.kubernetes.io/name=dex"
          tls:
           - secretName: dex-tls
             hosts:
               - dex.kirillorlov.pro

  syncPolicy:
    automated:
      prune: true
    managedNamespaceMetadata:
      annotations:
        reloader.stakater.com/auto: "true"
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - RespectIgnoreDifferences=true
