apiVersion: v1
kind: Namespace
metadata:
  name: kubernetes-dashboard
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: kubernetes-dashboard
  namespace: kube-system
spec:
  chart: https://kubernetes.github.io/dashboard/kubernetes-dashboard-7.0.0-alpha1.tgz
  targetNamespace: kubernetes-dashboard
  valuesContent: |-
    nginx:
      enabled: false
    cert-manager:
      enabled: false
      installCRDs: false
    metrics-server:
      enabled: false

    app:
      ingress:
        hosts: 
          - dashboard.k8s.kirillorlov.pro
        ingressClassName: traefik
        issuer:
          name: acme-issuer
          scope: cluster
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kubernetes-dashboard
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kubernetes-dashboard
---
apiVersion: v1
kind: Secret
metadata:
  name: admin-user
  namespace: kubernetes-dashboard
  annotations:
    kubernetes.io/service-account.name: "admin-user"   
type: kubernetes.io/service-account-token  
---

apiVersion: v1
kind: Namespace
metadata:
  name: argocd
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: argocd
  namespace: kube-system
spec:
  chart: https://github.com/argoproj/argo-helm/releases/download/argo-cd-6.6.0/argo-cd-6.6.0.tgz
  targetNamespace: argocd
  valuesContent: |-
    global:
      domain: argo.k8s.kirillorlov.pro
      affinity.nodeAffinity.type: soft

    server:
      ingress:
        enabled: true
        tls: true
      certificate:
        enabled: true
        issuer:
          name: acme-issuer
          kind: ClusterIssuer
          group: cert-manager.io
      autoscaling:
        enabled: false
        minReplicas: 2

    redis-ha:
      enabled: false
      haproxy:
        hardAntiAffinity: false

    configs:
      params:
        server.insecure: true
      cm:
        exec:
          enabled: true

    dex:
      enabled: false

    controller:
      replicas: 2

    repoServer:
      autoscaling:
        enabled: false
        minReplicas: 2

    applicationSet:
      replicas: 2
---
apiVersion: v1
kind: Namespace
metadata:
  name: cert-manager
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: cert-manager
  namespace: kube-system
spec:
  repo: https://charts.jetstack.io
  chart: cert-manager
  targetNamespace: cert-manager
  version: v1.14.3
  valuesContent: |-
    installCRDs: true
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: acme-issuer
spec:
  acme:
    email: diverofdark@gmail.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: acme-issuer-account-key
    solvers:
    - dns01:
        cloudflare:
          email: "diverofdark@gmail.com"
          apiTokenSecretRef:
            name: cloudflare-api-token-secret
            key: api-token
      selector:
        dnsZones:
        - 'k8s.kirillorlov.pro'