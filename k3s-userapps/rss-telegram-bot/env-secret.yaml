apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: rss-telegram-bot-secret
  namespace: rss-telegram-bot
spec:
  secretStoreRef:
    name: bitwarden-login
    kind: ClusterSecretStore  # or ClusterSecretStore

  refreshInterval: "10s"

  target:
    name: rss-telegram-bot-secret
    creationPolicy: 'Owner'
    deletionPolicy: "Retain"
    template:
      type: Opaque
      data:
        TOKEN: "{{ .token }}"
        MANAGER: "{{ .manager }}"
        TELEGRAPH_TOKEN: "{{ .telegraph }}"
        API_ID: "{{ .apiId }}"
        API_HASH: "{{ .apiHash }}"
  data:
    - secretKey: apiHash
      remoteRef:
        key: e5e0e13c-af69-44ad-9874-3df4c3d48f29
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        property: password
    - secretKey: apiId
      remoteRef:
        key: e5e0e13c-af69-44ad-9874-3df4c3d48f29
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        property: username
    - secretKey: manager
      remoteRef:
        key: 7fceab96-1517-4474-81c7-e9565822fb2f
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        property: username
    - secretKey: telegraph
      remoteRef:
        key: 78f8a69c-831d-4949-8a42-b72443978231
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        property: password
    - secretKey: token
      remoteRef:
        key: 7fceab96-1517-4474-81c7-e9565822fb2f
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        property: password
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: rss-telegram-bot-db-secret
  namespace: rss-telegram-bot
spec:
  secretStoreRef:
    name: rsstt-secret-store
    kind: ClusterSecretStore  # or ClusterSecretStore

  refreshInterval: "10s"

  target:
    name: rss-telegram-bot-db-secret
    creationPolicy: 'Owner'
    deletionPolicy: "Retain"
    template:
      type: Opaque
      data:
        DATABASE_URL: "postgres://{{ .user }}:{{ .pass }}@rsstt-db/rsstt"
  data:
    - secretKey: user
      remoteRef:
        key: rsstt.rsstt-db.credentials.postgresql.acid.zalan.do
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        property: username
    - secretKey: pass
      remoteRef:
        key: rsstt.rsstt-db.credentials.postgresql.acid.zalan.do
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        property: password

---
apiVersion: external-secrets.io/v1
kind: ClusterSecretStore
metadata:
  name: rsstt-secret-store
spec:
  provider:
    kubernetes:
      remoteNamespace: rss-telegram-bot
      server:
        url: "https://kubernetes.default.svc:443"
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          namespace: kube-system
          key: ca.crt
      auth:
        serviceAccount:
          name: eso-external-secrets
          namespace: eso




