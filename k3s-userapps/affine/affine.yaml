apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  finalizers:
    - kubernetes.io/pvc-protection
  name: affine
  namespace: affine
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: longhorn
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: affine
  namespace: affine
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/pod: affine
  template:
    metadata:
      labels:
        app.kubernetes.io/pod: affine
    spec:
      volumes:
          - name: affine-pvc
            persistentVolumeClaim:
              claimName: affine
      containers:
        - image: 'ghcr.io/toeverything/affine-graphql:stable'
          command:
            - sh
            - '-c'
            - node ./scripts/self-host-predeploy && node ./dist/index.js
          name: affine
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 2
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          ports:
            - containerPort: 3010
              protocol: TCP
              name: "http"
            - containerPort: 5555
              protocol: TCP
              name: "other"
          volumeMounts:
            - mountPath: /root/.affine/config
              name: affine-pvc
              subPath: config
            - mountPath: /root/.affine/storage
              name: affine-pvc
              subPath: storage
          env:
            - name: NODE_OPTIONS
              value: "--import=./scripts/register.js"
            - name: AFFINE_SERVER_EXTERNAL_URL
              value: https://affine.kirillorlov.pro/
            - name: AFFINE_CONFIG_PATH
              value: /root/.affine/config
            - name: REDIS_SERVER_HOST
              value: redis.affine.svc.cluster.local
            - name: DATABASE_URL
              value: postgres://affine:affine@postgres.affine.svc.cluster.local:5432/affine
            - name: NODE_ENV
              value: production
            - name: TELEMETRY_ENABLE
              value: "false"
---
apiVersion: v1
kind: Service
metadata:
  name: affine
  namespace: affine
spec:
  internalTrafficPolicy: Cluster
  ports:
  - name: affine
    port: 80
    protocol: TCP
    targetPort: 3010
  selector:
    app.kubernetes.io/pod: affine
  type: ClusterIP