apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  finalizers:
    - kubernetes.io/pvc-protection
  name: postgres
  namespace: affine
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: longhorn
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: affine
spec:
  replicas: 0
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/pod: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/pod: postgres
    spec:
      volumes:
          - name: postgres-pvc
            persistentVolumeClaim:
              claimName: postgres
      containers:
        - image: 'postgres:16.4'
          name: postgres
          ports:
            - containerPort: 6379
              protocol: TCP
              name: "http"
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-pvc
          env:
            - name: POSTGRES_DB
              value: affine
            - name: POSTGRES_USER
              value: affine
            - name: POSTGRES_PASSWORD
              value: affine
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: affine
spec:
  internalTrafficPolicy: Cluster
  ports:
  - name: postgres
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app.kubernetes.io/pod: postgres
  type: ClusterIP
---
apiVersion: acid.zalan.do/v1
kind: postgresql
metadata:
  name: affine-db
  namespace: affine
spec:
  teamId: "acid"
  postgresql:
    version: "16"
  numberOfInstances: 1
  volume:
    size: "5Gi"
  users:
    affine: [ ]
  databases:
    affine: affine
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: 500m
      memory: 500Mi
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: affine-db-secret
  namespace: affine
spec:
  secretStoreRef:
    name: affine-secret-store
    kind: ClusterSecretStore  # or ClusterSecretStore

  refreshInterval: "10s"

  target:
    name: affine-db-secret
    creationPolicy: 'Owner'
    deletionPolicy: "Retain"
    template:
      type: Opaque
      data:
        DATABASE_URL: "postgres://{{ .user }}:{{ .pass }}@affine-db/affine"
  data:
    - secretKey: user
      remoteRef:
        key: affine.affine-db.credentials.postgresql.acid.zalan.do
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        property: username
    - secretKey: pass
      remoteRef:
        key: affine.affine-db.credentials.postgresql.acid.zalan.do
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        property: password

---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: affine-secret-store
spec:
  provider:
    kubernetes:
      remoteNamespace: affine
      server:
        url: "https://192.168.179.1:6443"
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          namespace: kube-system
          key: ca.crt
      auth:
        serviceAccount:
          name: eso-external-secrets
          namespace: eso


