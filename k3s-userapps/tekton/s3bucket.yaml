apiVersion: objectbucket.io/v1alpha1
kind: ObjectBucketClaim
metadata:
  name: bucket-s3
  namespace: tekton-pipelines
spec:
  bucketName: tekton-bucket
  storageClassName: ceph-bucket
---
apiVersion: external-secrets.io/v1
kind: ClusterSecretStore
metadata:
  name: tekton-secret-store
  namespace: tekton-pipelines
spec:
  provider:
    kubernetes:
      remoteNamespace: tekton-pipelines
      server:
        url: "https://kubernetes.default.svc:443"
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          namespace: kube-system
          key: ca.crt
      auth:
        serviceAccount:
          name: eso-external-secrets
          namespace: eso
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: s3-secret
  namespace: tekton-pipelines
spec:
  secretStoreRef:
    name: tekton-secret-store
    kind: ClusterSecretStore  # or ClusterSecretStore

  refreshInterval: "10s"

  target:
    name: tekton-s3-secret
    creationPolicy: 'Owner'
    deletionPolicy: "Retain"
    template:
      type: Opaque
      data:
        S3_BUCKET_NAME: "tekton-bucket"
        S3_ENDPOINT: "rook-ceph-rgw-ceph-objectstore.rook-ceph.svc"
        S3_HOSTNAME_IMMUTABLE: "false"
        S3_REGION: ""
        S3_ACCESS_KEY_ID: "{{ .accessKey }}"
        S3_SECRET_ACCESS_KEY: "{{ .secretKey }}"
        S3_MULTI_PART_SIZE: "5242880"
  data:
    - secretKey: accessKey
      remoteRef:
        key: bucket-s3
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        property: AWS_ACCESS_KEY_ID
    - secretKey: secretKey
      remoteRef:
        key: bucket-s3
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        property: AWS_SECRET_ACCESS_KEY
