apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: acme-issuer
    gethomepage.dev/enabled: "true"
    gethomepage.dev/href: "https://jackett.kirillorlov.pro"
    gethomepage.dev/group: Media
    gethomepage.dev/name: Jackett
    gethomepage.dev/icon: jackett.png
    gethomepage.dev/pod-selector: "app.kubernetes.io/pod=jackett"
    gethomepage.dev/widget.type: "jackett"
    gethomepage.dev/widget.url: "http://jackett.media.svc.cluster.local"
  name: jackett
  namespace: media
spec:
  rules:
  - host: jackett.kirillorlov.pro
    http:
      paths:
      - backend:
          service:
            name: jackett
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - jackett.kirillorlov.pro
    secretName: jackett-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: acme-issuer
    gethomepage.dev/enabled: "true"
    gethomepage.dev/href: "https://radarr.kirillorlov.pro"
    gethomepage.dev/group: Media
    gethomepage.dev/name: Radarr
    gethomepage.dev/icon: radarr.png
    gethomepage.dev/pod-selector: "app.kubernetes.io/pod=radarr"
    gethomepage.dev/widget.type: radarr
    gethomepage.dev/widget.url: http://radarr.media.svc.cluster.local
    gethomepage.dev/widget.key: "$RADARR_API_KEY$"
    gethomepage.dev/widget.enableQueue: true # optional, defaults to false
    kirillorlov.pro/annotationsFromSecretName: plex-secret
  name: radarr
  namespace: media
spec:
  rules:
  - host: radarr.kirillorlov.pro
    http:
      paths:
      - backend:
          service:
            name: radarr
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - radarr.kirillorlov.pro
    secretName: radarr-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: acme-issuer
    gethomepage.dev/enabled: "true"
    gethomepage.dev/href: "https://sonarr.kirillorlov.pro"
    gethomepage.dev/group: Media
    gethomepage.dev/name: Sonarr
    gethomepage.dev/icon: sonarr.png
    gethomepage.dev/widget.type: sonarr
    gethomepage.dev/widget.url: http://sonarr.media.svc.cluster.local
    gethomepage.dev/widget.enableQueue: true # optional, defaults to false
    gethomepage.dev/widget.key: "$SONARR_API_KEY$"
    gethomepage.dev/pod-selector: "app.kubernetes.io/pod=sonarr"
    kirillorlov.pro/annotationsFromSecretName: plex-secret
  name: sonarr
  namespace: media
spec:
  rules:
  - host: sonarr.kirillorlov.pro
    http:
      paths:
      - backend:
          service:
            name: sonarr
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - sonarr.kirillorlov.pro
    secretName: sonarr-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: acme-issuer
    gethomepage.dev/enabled: "true"
    gethomepage.dev/href: "https://overseerr.kirillorlov.pro"
    gethomepage.dev/group: Media
    gethomepage.dev/name: Overserr
    gethomepage.dev/icon: overseerr.png
    gethomepage.dev/pod-selector: "app.kubernetes.io/pod=overseerr"
    gethomepage.dev/widget.type: overseerr
    gethomepage.dev/widget.url: http://overseerr.media.svc.cluster.local
    gethomepage.dev/widget.key: "$OVERSEER_TOKEN$"
    kirillorlov.pro/annotationsFromSecretName: plex-secret
  name: overseerr
  namespace: media
spec:
  rules:
  - host: overseerr.kirillorlov.pro
    http:
      paths:
      - backend:
          service:
            name: overseerr
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - overseerr.kirillorlov.pro
    secretName: overseerr-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: acme-issuer
    gethomepage.dev/enabled: "true"
    gethomepage.dev/href: "https://plex.kirillorlov.pro"
    gethomepage.dev/group: Media
    gethomepage.dev/name: Plex
    gethomepage.dev/icon: plex.png
    gethomepage.dev/pod-selector: "app.kubernetes.io/pod=plex"
    gethomepage.dev/widget.type: plex
    gethomepage.dev/widget.url: http://plex.media.svc.cluster.local
    gethomepage.dev/widget.key: "$PLEX_API_TOKEN$"
    kirillorlov.pro/annotationsFromSecretName: plex-secret
  name: plex-secret
  namespace: media
spec:
  rules:
  - host: plex.kirillorlov.pro
    http:
      paths:
      - backend:
          service:
            name: plex
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - plex.kirillorlov.pro
    secretName: plex-tls
---