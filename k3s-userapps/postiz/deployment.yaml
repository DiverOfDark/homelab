apiVersion: apps/v1
kind: Deployment
metadata:
  name: postiz-redis
  namespace: postiz
spec:
  progressDeadlineSeconds: 600
  strategy:
    type: Recreate
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/pod: postiz-redis
  template:
    metadata:
      labels:
        app.kubernetes.io/pod: postiz-redis
    spec:
      volumes:
        - name: postiz-redis
          persistentVolumeClaim:
            claimName: postiz-redis
      containers:
        - image: 'redis:7.2'
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
            - containerPort: 6379
              protocol: TCP
              name: "redis"
          volumeMounts:
            - mountPath: /data
              name: postiz-redis
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 15
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postiz
  namespace: postiz
spec:
  progressDeadlineSeconds: 600
  strategy:
    type: Recreate
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/pod: postiz
  template:
    metadata:
      labels:
        app.kubernetes.io/pod: postiz
    spec:
      volumes:
        - name: postiz-config
          persistentVolumeClaim:
            claimName: postiz-config
        - name: postiz-uploads
          persistentVolumeClaim:
            claimName: postiz-uploads
      containers:
        - image: 'ghcr.io/gitroomhq/postiz-app:latest'
          imagePullPolicy: Always
          name: postiz
          ports:
            - containerPort: 5000
              protocol: TCP
              name: "http"
          env:
            - name: MAIN_URL
              value: "https://postiz.kirillorlov.pro"
            - name: FRONTEND_URL
              value: "https://postiz.kirillorlov.pro"
            - name: NEXT_PUBLIC_BACKEND_URL
              value: "https://postiz.kirillorlov.pro/api"
            - name: BACKEND_INTERNAL_URL
              value: "http://localhost:3000"
            - name: IS_GENERAL
              value: "true"
            - name: DISABLE_REGISTRATION
              value: "false"
            - name: STORAGE_PROVIDER
              value: "local"
            - name: UPLOAD_DIRECTORY
              value: "/uploads"
            - name: NEXT_PUBLIC_UPLOAD_DIRECTORY
              value: "/uploads"
          envFrom:
            - secretRef:
                name: postiz-secret
            - secretRef:
                name: postiz-db-credentials
          volumeMounts:
            - mountPath: /config
              name: postiz-config
            - mountPath: /uploads
              name: postiz-uploads
          livenessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 15
