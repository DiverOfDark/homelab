apiVersion: v1
kind: Namespace
metadata:
  name: seedbox
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: seedbox
  namespace: seedbox
spec:
  secretStoreRef:
    name: default-secret-store
    kind: ClusterSecretStore  # or ClusterSecretStore

  refreshInterval: "10s"

  target:
    name: seedbox
    creationPolicy: 'Owner'
    deletionPolicy: "Retain"
    template:
      type: Opaque
      data:
        users: "{{ .user }}:{{ .password }}"
  data:
    - secretKey: user
      remoteRef:
        key: golden-secret
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        property: seedbox-username
    - secretKey: password
      remoteRef:
        key: golden-secret
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None
        property: seedbox-password
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: basic-auth
  namespace: seedbox
spec:
  basicAuth:
    secret: seedbox
---
# Prefixing with /foo
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: addrutorrent
  namespace: seedbox
spec:
  addPrefix:
    prefix: /rutorrent
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: host-rewrite
  namespace: seedbox
spec:
  headers:
    customRequestHeaders:
      Host: transporter.myseedbox.site
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: addrutorrent@kubernetescrd,basic-auth@kubernetescrd,host-rewrite@kubernetescrd
    cert-manager.io/cluster-issuer: acme-issuer
#    gethomepage.dev/enabled: "true"
#    gethomepage.dev/href: "https://overseerr.kirillorlov.pro"
#    gethomepage.dev/group: Media
#    gethomepage.dev/name: Overserr
#    gethomepage.dev/icon: overseerr.png
#    gethomepage.dev/pod-selector: "app.kubernetes.io/pod=overseerr"
#    gethomepage.dev/widget.type: overseerr
#    gethomepage.dev/widget.url: http://overseerr.media.svc.cluster.local
#    gethomepage.dev/widget.key: "$OVERSEERR_TOKEN$"
#    kirillorlov.pro/annotationsFromSecretName: plex-secret
  name: seedbox
  namespace: seedbox
spec:
  rules:
  - host: seedbox.kirillorlov.pro
    http:
      paths:
      - backend:
          service:
            name: external-service
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - seedbox.kirillorlov.pro
    secretName: seedbox-tls
---
apiVersion: v1
kind: Service
metadata:
  name: external-service
  namespace: seedbox
spec:
  type: ExternalName
  externalName: transporter.myseedbox.site
  ports:
    - port: 80