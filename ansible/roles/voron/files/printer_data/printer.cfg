[include subsystems/mainsail.cfg]
[include subsystems/timelapse.cfg]
[include subsystems/knomi.cfg]
[include subsystems/kinematics.cfg]
[include subsystems/leds.cfg]

# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

# canboard docs - https://mellow.klipper.cn/?lang=en#/board/fly_sb2040_pro/cfg

# Toolhead CAN
# Pin closer to PCB    - H - Wire Yellow
# Pin farther from PCB - L - Wire White

# Octopus CAN
# Pin 2 - L - White
# Pin 3 - H - Yellow
# Pin 5 near the corner
# Yellow closer to corner


### Fans pinout
# Fan# | PIN
# 0    | PA8
# 1    | PE5
# 2    | PD12
# 3    | PD13
# 4    | PD14
# 5    | PD15
# 6    | GND?!
# 7    | GND?!

### STOP pinous
# Stop# | PIN
# 0     | PG6
# 1     | PG9
# 2     | PG10
# 3     | PG11
# 4     | PG12
# 5     | PG13
# 6     | PG14
# 7     | PG15

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
#serial: /dev/serial/by-id/usb-Klipper_stm32f429xx_30004E000D50304738313820-if00
#serial: /dev/ttyAMA0
canbus_uuid: 98fd6e742640
#restart_method: command
##--------------------------------------------------------------------

[temperature_sensor OctopusPro]
sensor_type: temperature_mcu

[temperature_sensor RaspberryPi]
sensor_type: temperature_host


[mcu sb2040]
# serial: /dev/serial/by-id/usb-Klipper_rp2040_E66138935F704724-if00
#canbus_uuid: 228eb00b693e 
canbus_uuid: 678b3311c83f

[mcu mmb]
canbus_uuid: 42c58b4706d8

#####################################################################
#   Extruder
#####################################################################
## Copypaste from SB2040 guide - https://mellow.klipper.cn/#/board/fly_sb2040/cfg

[temperature_sensor FLY-SB2040]
sensor_type: temperature_mcu
sensor_mcu: sb2040

[temperature_sensor StealthBurner]
#sensor_type = ATC Semitec 104GT-2
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin = sb2040:gpio26
min_temp: -50
max_temp: 350


## FAN0
[fan]
pin: sb2040:gpio13
kick_start_time: 0.5         
off_below: 0.50              

[fan_generic electronics1]
pin: PD12

[fan_generic electronics2]
pin: PD13

#pin:
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:

## FAN1
[heater_fan thermobarrier_fan]
heater: extruder
heater_temp: 50.0
fan_speed: 0.8
pin: sb2040:gpio14
kick_start_time: 0.5  

## FAN2
# [fan_generic fan]
# pin: sb2040:gpio15


[extruder]
step_pin: sb2040:gpio9
dir_pin: sb2040:gpio10
enable_pin: !sb2040:gpio7

heater_pin: sb2040:gpio6
sensor_pin: sb2040:gpio27

##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 47.088   # Galileo
gear_ratio: 9:1             # Galileo
microsteps: 16

##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1

#regular stealthburner:
#rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
#gear_ratio: 50:10               #BMG Gear Ratio
#microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.600
filament_diameter: 1.75
#heater_pin: PA2

## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
#sensor_type: NTC 100K MGB18-104F39050L32
sensor_type: ATC Semitec 104NT-4-R025H42G
#sensor_pin: PF4
min_temp: 10
max_temp: 350
#max_power: 1.0
min_extrude_temp: 170
control = pid
pid_kp = 30.376
pid_ki = 2.411
pid_kd = 95.684

##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.05
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

## sensor_type: PT1000
## pullup_resistor: 1000
## SB2040默认热敏上拉电阻为4700。可通过跳线帽配置为1000，1000更适合PT1000类型的温度传感器


## 挤出机驱动设置
[tmc2240 extruder]
cs_pin: sb2040:gpio11               # SPI 片选Pin脚定义
spi_software_sclk_pin: sb2040:gpio0
spi_software_mosi_pin: sb2040:gpio3
spi_software_miso_pin: sb2040:gpio2
run_current: 0.65                   # 电机运行电流值
interpolate: False                  # 是否开启256微步插值（不建议开启）
rref: 12300                         # 驱动采样电阻
stealthchop_threshold: 99999        # 静音阀值（如果不需要静音，请将数值改为0）
driver_TPFD: 0


[adxl345]
cs_pin: sb2040:gpio1
spi_software_sclk_pin: sb2040:gpio0
spi_software_mosi_pin: sb2040:gpio3
spi_software_miso_pin: sb2040:gpio2

[resonance_tester]
accel_chip: adxl345
probe_points: 150, 150, 10  # an example

[input_shaper]
shaper_freq_x: 44.8
shaper_type_x: zv
shaper_freq_y: 38
shaper_type_y: mzv

#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
##  Uncomment the following line if using the default SSR wiring from the docs site
#heater_pin: PA3
##  Other wiring guides may use BED_OUT to control the SSR. Uncomment the following line for those cases
heater_pin: PA1
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.8
min_temp: 0
max_temp: 120
control: pid
pid_kp: 34.231
pid_ki: 1.082
pid_kd: 270.854

#####################################################################
#   Probe
#####################################################################

##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling
[probe]
#--------------------------------------------------------------------
## Select the probe port by type:
## For the PROBE port. Will not work with Diode. May need pull-up resistor from signal to 24V.
pin: ^!sb2040:gpio28
## For the DIAG_7 port. NEEDS BAT85 DIODE! Change to !PG15 if probe is NO.
#pin: PG15
## For Octopus Pro PROBE port; NPN and PNP proximity switch types can be set by jumper
#pin: ~!PC5

#--------------------------------------------------------------------

x_offset: 0
y_offset: 0 # 25.0
#z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.1
samples_tolerance_retries: 3

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    

#####################################################################
#   Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
#[fan]
#pin: PA8
#kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
#off_below: 0.10


##  Hotend Fan - FAN1
#[heater_fan hotend_fan]
#pin: PE5
#max_power: 1.0
#kick_start_time: 0.5
#heater: extruder
#heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

##  Controller fan - FAN2
#[controller_fan controller_fan]
#pin: PD12
#kick_start_time: 0.5
#heater: heater_bed

##  Exhaust fan - FAN3
#[heater_fan exhaust_fan]
#pin: PD13
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
#[output_pin caselight]
#pin: PB10
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
gcode:
    {% if printer.pause_resume.is_paused %}
        M118 Bypassed Timeout
        M117 Bypassed Timeout
    {% else %}
        M118 Timeout Reached
        M117 Timeout Reached
        TURN_OFF_HEATERS
        M84
    {% endif %}
timeout: 3600

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
#home_xy_position:220,300
home_xy_position:150,150
speed:100
z_hop:30

[force_move]
enable_force_move: True

##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

#--------------------------------------------------------------------
##  Gantry Corners for 250mm Build
##  Uncomment for 250mm build
#gantry_corners:
#   -60,-10
#   310, 320
##  Probe points
#points:
#   50,25
#   50,175
#   200,175
#   200,25
    
##  Gantry Corners for 300mm Build
##  Uncomment for 300mm build
gantry_corners:
   -60,-10
   360,370
##  Probe points
points:
   50,50
   50,250
   250,250
   250,50

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
#gantry_corners:
#   -60,-10
#   410,420
##  Probe points
#points:
#   50,25
#   50,275
#   300,275
#   300,25

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 20
retries: 5
retry_tolerance: 0.2
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

#[board_pins]
#aliases:
#    # EXP1 header
#    EXP1_1=PE8, EXP1_2=PE7,
#    EXP1_3=PE9, EXP1_4=PE10,
#    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
#    EXP1_7=PE14, EXP1_8=PE15,
#    EXP1_9=<GND>, EXP1_10=<5V>,
#
#    # EXP2 header
#    EXP2_1=PA6, EXP2_2=PA5,
#    EXP2_3=PB1, EXP2_4=PA4,
#    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
#    EXP2_7=PC15, EXP2_8=<RST>,
#    EXP2_9=<GND>, EXP2_10=<5V>

#--------------------------------------------------------------------

# [filament_switch_sensor switch_sensor]
# switch_pin: ^PG11
# pause_on_runout: False
# runout_gcode:
#   PAUSE  #  [pause_resume] is required in printer.cfg
#   M117 Filament switch runout
# insert_gcode:
#   M117 Filament switch inserted
# [filament_motion_sensor encoder_sensor]
# switch_pin: ^PG10
# detection_length: 6 # accuracy of motion sensor 2.88mm
# extruder: extruder
# pause_on_runout: False
# runout_gcode:
#   PAUSE  #  [pause_resume] is required in printer.cfg
#   M117 Filament encoder runout
# insert_gcode:
#   M117 Filament encoder inserted
#
# [gcode_arcs]

#####################################################################
#   Macros
#####################################################################


[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    G0 X150 Y150 Z30 F3600
    RESTORE_GCODE_STATE NAME=STATE_G32


#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
[gcode_macro PRINT_START]
gcode:
    G32                            ; home all axes
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed
   

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro DEBUG_MOVEMENT]
gcode:
    SET_KINEMATIC_POSITION X=50 Y=50 Z=50

[gcode_macro SQUARE]
gcode:
    G0 X50 Y50
    G0 X100 Y50
    G0 X100 Y100
    G0 X50 Y100
    G0 X50 Y50
    G0 X100 Y100
    G0 Y50 Y50

[gcode_macro XY_CENTER]
gcode:
    g0 X150 Y150

[gcode_macro Z_OFFSET_CHECK]
gcode:
    Z_ENDSTOP_CALIBRATE





[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos  : True  ; use custom park coordinates for x,y [True/False] 
variable_custom_park_x   : 150.0 ; custom x position; value must be within your defined min and max of X
variable_custom_park_y   : 10.0  ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz  : 10.0  ; custom dz value; the value in mm to lift the nozzle when move to park position
gcode:

[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}
  
#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = -0.700
