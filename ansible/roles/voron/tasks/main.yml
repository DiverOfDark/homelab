- name: Check if Voron is currently printing
  check_mode: no
  uri:
    url: "http://voron2:7125/printer/objects/query?print_stats"
    method: GET
    return_content: yes
  register: printer_status

- name: Set default fact if Voron is not printing
  set_fact:
    voron_printing: "false"

- name: Set fact if Voron is printing
  when: printer_status.json is defined and 
        printer_status.json.result is defined and 
        printer_status.json.result.status is defined and
        printer_status.json.result.status.print_stats is defined and
        printer_status.json.result.status.print_stats.state is defined
  set_fact:
    voron_printing: "{{ printer_status.json.result.status.print_stats.state == 'printing' }}"

- name: Only run "update_cache=yes" if the last one is more than 3600 seconds ago
  when: not voron_printing
  check_mode: no
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Install packages
  when: not voron_printing
  apt:
    pkg: "{{ voron_packages }}"
    state: present

- name: Upgrade the OS (apt-get dist-upgrade)
  when: not voron_printing
  apt:
    upgrade: full

- name: Remove unused packages (apt-get autoremove)
  when: not voron_printing
  apt:
    autoremove: yes

- name: Update diverofdark user groups (enable sudo)
  when: not voron_printing
  user:
    name: diverofdark
    groups: "sudo"
    append: true

- name: Add Neofetch command to system-wide bashrc
  when: not voron_printing
  lineinfile:
    path: /etc/bash.bashrc
    create: yes
    line: 'neofetch'
    state: present

- name: Copy scripts
  when: not voron_printing
  ansible.builtin.copy:
    src: "scripts/{{ item }}"
    dest: "/home/diverofdark/{{ item }}"
    owner: diverofdark
    group: diverofdark
    mode: "0755"
  notify: Restart klipper
  loop: "{{ voron_scripts }}"

- name: Copy firmware configs
  ansible.builtin.copy:
    src: "flash_configs/{{ item }}"
    dest: "/home/diverofdark/{{ item }}"
    owner: diverofdark
    group: diverofdark
    mode: "0644"
  notify: Restart klipper
  loop: "{{ firmware_configs }}"

- name: Remove unused config files
  when: not voron_printing
  block:

    - name: Get a list of all files in the klipper config dir
      find:
        recurse: yes
        hidden: yes
        file_type: file
        paths: /home/diverofdark/printer_data/config/
      register: existing_config_files

    - name: Get a list of all links in the klipper config dir
      find:
        recurse: yes
        hidden: yes
        file_type: link
        paths: /home/diverofdark/printer_data/config/
      register: existing_config_links

    - name: Map files to list
      set_fact:
        existing_config_files: "{{ (existing_config_files.files + existing_config_links.files) | map(attribute='path') | replace('/home/diverofdark/printer_data/config/', '') }}"

    - name: Get list of expected symlinks
      set_fact:
        expected_links: "{{ klipper_symlinks | map(attribute='to') | replace('/home/diverofdark/printer_data/config/', '') }}"

    - name: Remove files from the list which are templated/copied
      set_fact:
        existing_config_files: "{{ existing_config_files | difference(klipper_configs + klipper_configs_template + expected_links)  }}"

- name: Setup config files
  when: not voron_printing
  block:
    - name: Remove file (delete file)
      ansible.builtin.file:
        path: "/home/diverofdark/printer_data/config/{{ item }}"
        state: absent
      loop: "{{ existing_config_files }}"

    - name: Copy klipper configs
      when: not voron_printing
      ansible.builtin.copy:
        src: "printer_data/{{ item }}"
        dest: "/home/diverofdark/printer_data/config/{{ item }}"
        owner: diverofdark
        group: diverofdark
        mode: "0644"
      notify: Restart klipper
      loop: "{{ klipper_configs }}"

    - name: Template configs
      when: not voron_printing
      ansible.builtin.template:
        src: "printer_data/{{ item }}"
        dest: "/home/diverofdark/printer_data/config/{{ item }}"
        owner: diverofdark
        group: diverofdark
        mode: "0644"
      notify: Restart klipper
      loop: "{{ klipper_configs_template }}"

    - name: Symlink configs
      when: not voron_printing
      ansible.builtin.file:
        src: "{{ item.from }}"
        dest: "{{ item.to }}"
        owner: diverofdark
        group: diverofdark
        state: link
      notify: Restart klipper
      loop: "{{ klipper_symlinks }}"