---
- name: Get k3s installed version
  ansible.builtin.command: k3s --version
  register: k3s_version_output
  changed_when: false
  ignore_errors: true

- name: Set k3s installed version
  when: k3s_version_output.rc == 0 and k3s_version_output.stdout_lines is defined and k3s_version_output.stdout_lines | length > 0
  ansible.builtin.set_fact:
    installed_k3s_version: "{{ k3s_version_output.stdout_lines[0].split(' ')[2] }}"

# If airgapped, all K3s artifacts are already on the node.
# We should be downloading and installing the newer version only if we are in one of the following cases :
#   - we couldn't get k3s installed version in the first task of this role
#   - the installed version of K3s on the nodes is older than the requested version in ansible vars
- name: Download artifact only if needed
  when: k3s_version_output.rc != 0 or installed_k3s_version is undefined or installed_k3s_version is version(k3s_version, '<')
  notify: Restart k3s
  block:
    - name: Download K3s install script
      ansible.builtin.get_url:
        url: https://get.k3s.io/
        timeout: 120
        dest: /usr/local/bin/k3s-install.sh
        owner: root
        group: root
        mode: "0755"

    - name: Download K3s binary
      ansible.builtin.command:
        cmd: /usr/local/bin/k3s-install.sh
      environment:
        INSTALL_K3S_SKIP_START: "true"
        INSTALL_K3S_VERSION: "{{ k3s_version }}"
      changed_when: true

- name: Add K3s autocomplete to user bashrc
  ansible.builtin.lineinfile:
    path: "~{{ ansible_user }}/.bashrc"
    regexp: '\.\s+<\(k3s completion bash\)'
    line: ". <(k3s completion bash)  # Added by k3s-ansible"

- name: Install SystemD service file
  block:
    - name: Copy K3s service file [HA-first]
      when:
        - k3s_master == true
        - inventory_hostname == groups['server'][0]
      notify: Restart k3s
      ansible.builtin.template:
        src: "k3s-cluster-init.service.j2"
        dest: "/etc/systemd/system/k3s.service"
        owner: root
        group: root
        mode: "0644"

    - name: Copy K3s service file [HA-others]
      when:
        - k3s_master == true
        - inventory_hostname != groups['server'][0]
      notify: Restart k3s
      ansible.builtin.template:
        src: "k3s-cluster-join.service.j2"
        dest: "/etc/systemd/system/k3s.service"
        owner: root
        group: root
        mode: "0644"

    - name: Copy K3s service file [HA-worker]
      when: k3s_master == false
      notify: Restart k3s
      ansible.builtin.template:
        src: "k3s-cluster-worker.service.j2"
        dest: "/etc/systemd/system/k3s.service"
        owner: root
        group: root
        mode: "0644"

    - name: Enable and check K3s service
      ansible.builtin.systemd:
        name: k3s
        daemon_reload: true
        state: started
        enabled: true

- name: Setup extra manifests
  block:
    - name: Make manifests directory
      notify: Restart k3s
      ansible.builtin.file:
        path: "/var/lib/rancher/k3s/server/manifests"
        mode: "0700"
        state: directory
    - name: Copy manifests
      notify: Restart k3s
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/var/lib/rancher/k3s/server/manifests"
        mode: "0600"
      loop: "{{ extra_manifests }}"
      when: extra_manifests is defined
    - name: Setup secrets
      no_log: true
      notify: Restart k3s
      ansible.builtin.template:
        src: "secret.yaml.j2"
        dest: "/var/lib/rancher/k3s/server/manifests/{{ item.namespace }}-{{ item.name }}.yaml"
        mode: "0700"
      loop: "{{ secrets }}"